%%% This file is automatically generated, from an OMDoc document 
%%% by an XSL style sheet (omdoc2xxx.xsl)  do not edit
%%% for information about OMDoc, see http://www.mathweb.org/omdoc


%%% The original omdoc with identifier `finite_sequences.omdoc`
%%% was created by: PVS (author)
%%% on: 2001-6-11@2:5:37 (created)

finite_sequences_test: THEORY
 BEGIN

  finite_sequence: TYPE = recordtype(length: nat,seq: funtype(below,T));
  finseq: TYPE = finite_sequence;
  empty_seq: finseq = record("length",0,"seq",(lambda(x: below): epsilon((lambda(t: T): TRUE))));
  finseq_appl: (sigmatype(fs: finseq): funtype(below,T)) = (lambda(fs: finseq): select-record-field(seq,fs));
  O: funtype(finseq,finseq,finseq) = (lambda(fs1: finseq, fs2: finseq): (lambda(l1: nat): (lambda(lsum: nonneg_int): record("length",lsum,"seq",(lambda(n: below):  IF <(n,l1) THEN select-record-field(seq,fs1)(n) ELSE select-record-field(seq,fs2)(-(n,l1)) ENDIF )))(+(l1,select-record-field(length,fs2))))(select-record-field(length,fs1)));
  ^: funtype(finseq,tupletype(nat,nat),finseq) = (lambda(fs: finseq, p: tupletype(nat,nat)): (lambda(m: nat, n: nat):  IF OR(>(m,n),>=(m,select-record-field(length,fs))) THEN empty_seq ELSE (lambda(len: ((set(k: int): AND(<=(k,-(+(1,n),m)),<=(k,-(select-record-field(length,fs),m)))))): record("length",len,"seq",(lambda(x: below): select-record-field(seq,fs)(+(x,m)))))(min(+(-(n,m),1),-(select-record-field(length,fs),m))) ENDIF )(p));
  extract1: funtype(((set(fs: finseq): =(select-record-field(length,fs),1))),T) = (lambda(fs: ((set(fs: finseq): =(select-record-field(length,fs),1)))): select-record-field(seq,fs)(0));
o_assoc: LEMMA (forall(fs1: finseq, fs2: finseq, fs3: finseq): =(O(fs1,O(fs2,fs3)),O(O(fs1,fs2),fs3)));


 END finite_sequences_test



