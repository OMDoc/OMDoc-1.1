%%% This file is automatically generated, from an OMDoc document 
%%% by an XSL style sheet (omdoc2xxx.xsl)  do not edit
%%% for information about OMDoc, see http://www.mathweb.org/omdoc


%%% The original omdoc with identifier `operator_defs.omdoc`
%%% was created by: PVS (author)
%%% on: 2001-6-11@2:5:21 (created)

operator_defs_test: THEORY
 BEGIN

  commutative?: funtype(funtype(T,T,T),bool) = (lambda(O: funtype(T,T,T)): (forall(x: T, y: T): =(O(x,y),O(y,x))));
  associative?: funtype(funtype(T,T,T),bool) = (lambda(O: funtype(T,T,T)): (forall(x: T, y: T, z: T): =(O(O(x,y),z),O(x,O(y,z)))));
  left_identity?: funtype(funtype(T,T,T),funtype(T,bool)) = (lambda(O: funtype(T,T,T)): (lambda(y: T): (forall(x: T): =(O(y,x),x))));
  right_identity?: funtype(funtype(T,T,T),funtype(T,bool)) = (lambda(O: funtype(T,T,T)): (lambda(y: T): (forall(x: T): =(O(x,y),x))));
  identity?: funtype(funtype(T,T,T),funtype(T,bool)) = (lambda(O: funtype(T,T,T)): (lambda(y: T): (forall(x: T): AND(=(O(x,y),x),=(O(y,x),x)))));
  has_identity?: funtype(funtype(T,T,T),bool) = (lambda(O: funtype(T,T,T)): (exists(y: T): identity?(O)(y)));
  zero?: funtype(funtype(T,T,T),funtype(T,bool)) = (lambda(O: funtype(T,T,T)): (lambda(y: T): (forall(x: T): AND(=(O(x,y),y),=(O(y,x),y)))));
  has_zero?: funtype(funtype(T,T,T),bool) = (lambda(O: funtype(T,T,T)): (exists(y: T): zero?(O)(y)));
  inverses?: funtype(funtype(T,T,T),funtype(funtype(T,T),funtype(T,bool))) = (lambda(O: funtype(T,T,T)): (lambda(-: funtype(T,T)): (lambda(y: T): (forall(x: T): AND(=(O(x,-(x)),y),=(O(-(x),x),y))))));
  has_inverses?: funtype(funtype(T,T,T),bool) = (lambda(O: funtype(T,T,T)): (exists(-: funtype(T,T), y: T): inverses?(O)(-)(y)));
  distributive?: funtype(funtype(T,T,T),funtype(T,T,T),bool) = (lambda(*: funtype(T,T,T), O: funtype(T,T,T)): (forall(x: T, y: T, z: T): =(*(x,O(y,z)),O(*(x,y),*(x,z)))));


 END operator_defs_test



