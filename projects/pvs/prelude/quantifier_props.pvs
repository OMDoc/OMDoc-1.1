%%% This file is automatically generated, from an OMDoc document 
%%% by an XSL style sheet (omdoc2xxx.xsl)  do not edit
%%% for information about OMDoc, see http://www.mathweb.org/omdoc


%%% The original omdoc with identifier `quantifier_props.omdoc`
%%% was created by: PVS (author)
%%% on: 2001-6-11@2:5:12 (created)

quantifier_props_test: THEORY
 BEGIN

not_exists: LEMMA (forall(p: funtype(t,bool)): =((exists(x: t): p(x)),NOT((forall(x: t): NOT(p(x))))));
exists_not: LEMMA (forall(p: funtype(t,bool)): =((exists(x: t): NOT(p(x))),NOT((forall(x: t): p(x)))));
exists_or: LEMMA (forall(p: funtype(t,bool), q: funtype(t,bool)): =((exists(x: t): OR(p(x),q(x))),OR((exists(x: t): p(x)),(exists(x: t): q(x)))));
exists_implies: LEMMA (forall(p: funtype(t,bool), q: funtype(t,bool)): =((exists(x: t): IMPLIES(p(x),q(x))),OR((exists(x: t): NOT(p(x))),(exists(x: t): q(x)))));
exists_and: LEMMA (forall(p: funtype(t,bool), q: funtype(t,bool)): IMPLIES((exists(x: t): AND(p(x),q(x))),AND((exists(x: t): p(x)),(exists(x: t): q(x)))));
not_forall: LEMMA (forall(p: funtype(t,bool)): =((forall(x: t): p(x)),NOT((exists(x: t): NOT(p(x))))));
forall_not: LEMMA (forall(p: funtype(t,bool)): =((forall(x: t): NOT(p(x))),NOT((exists(x: t): p(x)))));
forall_and: LEMMA (forall(p: funtype(t,bool), q: funtype(t,bool)): =((forall(x: t): AND(p(x),q(x))),AND((forall(x: t): p(x)),(forall(x: t): q(x)))));
forall_or: LEMMA (forall(p: funtype(t,bool), q: funtype(t,bool)): IMPLIES(OR((forall(x: t): p(x)),(forall(x: t): q(x))),(forall(x: t): OR(p(x),q(x)))));


 END quantifier_props_test



