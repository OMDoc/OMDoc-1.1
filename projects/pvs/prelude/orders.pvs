%%% This file is automatically generated, from an OMDoc document 
%%% by an XSL style sheet (omdoc2xxx.xsl)  do not edit
%%% for information about OMDoc, see http://www.mathweb.org/omdoc


%%% The original omdoc with identifier `orders.omdoc`
%%% was created by: PVS (author)
%%% on: 2001-6-11@2:5:18 (created)

orders_test: THEORY
 BEGIN

  preorder?: funtype(pred,bool) = (lambda(<=: pred): (reflexive?(<=) & transitive?(<=)));
  partial_order?: funtype(pred,bool) = (lambda(<=: pred): (preorder?(<=) & antisymmetric?(<=)));
  strict_order?: funtype(pred,bool) = (lambda(<: pred): (irreflexive?(<) & transitive?(<)));
  dichotomous?: funtype(pred,bool) = (lambda(<=: pred): (forall(x: T, y: T): OR(<=(x,y),<=(y,x))));
  total_order?: funtype(pred,bool) = (lambda(<=: pred): (partial_order?(<=) & dichotomous?(<=)));
  linear_order?: funtype(pred,bool) = (lambda(<=: pred): total_order?(<=));
  trichotomous?: funtype(pred,bool) = (lambda(<: pred): (forall(x: T, y: T): OR(<(x,y),OR(<(y,x),=(x,y)))));
  strict_total_order?: funtype(pred,bool) = (lambda(<: pred): (strict_order?(<) & trichotomous?(<)));
  well_founded?: funtype(pred,bool) = (lambda(<: pred): (forall(p: pred): IMPLIES((exists(y: T): p(y)),(exists(y: (p)): (forall(x: (p)): NOT(<(x,y)))))));
  well_ordered?: funtype(pred,bool) = (lambda(<: pred): (strict_total_order?(<) & well_founded?(<)));
  nonempty_pred: TYPE = ((set(p: pred): (exists(x: T): p(x))));
  upper_bound?: funtype(pred,funtype(T,nonempty_pred,bool)) = (lambda(<: pred): (lambda(x: T, pe: nonempty_pred): (forall(y: (pe)): <(y,x))));
  upper_bound?: funtype(pred,funtype(nonempty_pred,funtype(T,bool))) = (lambda(<: pred): (lambda(pe: nonempty_pred): (lambda(x: T): upper_bound?(<)(x,pe))));
  lower_bound?: funtype(pred,funtype(T,nonempty_pred,bool)) = (lambda(<: pred): (lambda(x: T, pe: nonempty_pred): (forall(y: (pe)): <(x,y))));
  lower_bound?: funtype(pred,funtype(nonempty_pred,funtype(T,bool))) = (lambda(<: pred): (lambda(pe: nonempty_pred): (lambda(x: T): lower_bound?(<)(x,pe))));
  least_upper_bound?: funtype(pred,funtype(T,nonempty_pred,bool)) = (lambda(<: pred): (lambda(x: T, pe: nonempty_pred): AND(upper_bound?(<)(x,pe),(forall(y: T): IMPLIES(upper_bound?(<)(y,pe),OR(<(x,y),=(x,y)))))));
  least_upper_bound?: funtype(pred,funtype(nonempty_pred,funtype(T,bool))) = (lambda(<: pred): (lambda(pe: nonempty_pred): (lambda(x: T): least_upper_bound?(<)(x,pe))));
  greatest_lower_bound?: funtype(pred,funtype(T,nonempty_pred,bool)) = (lambda(<: pred): (lambda(x: T, pe: nonempty_pred): AND(lower_bound?(<)(x,pe),(forall(y: T): IMPLIES(lower_bound?(<)(y,pe),OR(<(y,x),=(x,y)))))));
  greatest_lower_bound?: funtype(pred,funtype(nonempty_pred,funtype(T,bool))) = (lambda(<: pred): (lambda(pe: nonempty_pred): (lambda(x: T): greatest_lower_bound?(<)(x,pe))));


 END orders_test



