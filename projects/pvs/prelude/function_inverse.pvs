%%% This file is automatically generated, from an OMDoc document 
%%% by an XSL style sheet (omdoc2xxx.xsl)  do not edit
%%% for information about OMDoc, see http://www.mathweb.org/omdoc


%%% The original omdoc with identifier `function_inverse.omdoc`
%%% was created by: PVS (author)
%%% on: 2001-6-11@2:5:20 (created)

function_inverse_test: THEORY
 BEGIN

  inverse: funtype(funtype(D,R),funtype(R,D)) = (lambda(f: funtype(D,R)): (lambda(y: R): epsilon((lambda(x: D): =(f(x),y)))));
surjective_inverse: LEMMA (forall(x: D, y: R, f: (surjective?)): IMPLIES(=(inverse(f)(y),x),=(y,f(x))));
injective_inverse: LEMMA (forall(x: D, y: R, f: (injective?)): IMPLIES(=(y,f(x)),=(inverse(f)(y),x)));
bijective_inverse: LEMMA (forall(x: D, y: R, f: (bijective?)): IFF(=(inverse(f)(y),x),=(y,f(x))));
bij_inv_is_bij: LEMMA (forall(f: funtype(D,R)): IMPLIES(bijective?(f),bijective?(inverse(f))));
  left_inverse?: funtype(funtype(R,D),funtype(D,R),bool) = (lambda(g: funtype(R,D), f: funtype(D,R)): (forall(x: D): =(g(f(x)),x)));
  right_inverse?: funtype(funtype(R,D),funtype(D,R),bool) = (lambda(g: funtype(R,D), f: funtype(D,R)): (forall(y: R): =(f(g(y)),y)));
surj_right: LEMMA (forall(f: funtype(D,R)): IFF(surjective?(f),right_inverse?(inverse(f),f)));
inj_left: LEMMA (forall(f: funtype(D,R)): IFF(injective?(f),left_inverse?(inverse(f),f)));
inj_inv: LEMMA (forall(f: funtype(D,R)): IMPLIES(surjective?(f),injective?(inverse(f))));
surj_inv: LEMMA (forall(f: funtype(D,R)): IMPLIES(injective?(f),surjective?(inverse(f))));
comp_inverse_right_surj: LEMMA (forall(y: R, f: (surjective?)): =(f(inverse(f)(y)),y));
comp_inverse_left_inj: LEMMA (forall(x: D, f: (injective?)): =(inverse(f)(f(x)),x));
comp_inverse_right: LEMMA (forall(y: R, f: (bijective?)): =(f(inverse(f)(y)),y));
comp_inverse_left: LEMMA (forall(x: D, f: (bijective?)): =(inverse(f)(f(x)),x));


 END function_inverse_test



