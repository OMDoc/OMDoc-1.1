%%%%%%% pdf stuff copied from Paul Libbrecht
\newif\ifpdf
\ifx\pdfoutput\undefined
\pdffalse % we are not running PDFLaTeX
\else\pdfoutput=1 % we are running PDFLaTeX
\pdftrue\fi


\ifpdf\pdfcompresslevel9
\usepackage[pdftex]{graphicx}
\else\usepackage{graphicx}\fi

% \ifpdf
%         \DeclareGraphicsExtensions{.pdf, .eps, .eps.gz, .jpg}
%         \DeclareGraphicsRule{.eps}     {pdf}  {.bb}{`convert EPS:#1 PDF:-}
%         \DeclareGraphicsRule{.eps.gz}  {pdf}  {.eps.bb}{`gunzip -c #1 | convert EPS:- PDF:-}
% \else
% %\DeclareGraphicsExtensions{.eps.gz, .eps, .jpg}
% %\DeclareGraphicsRule{.eps.gz}{eps}{.eps.bb}{`gunzip -c #1} 
% %\DeclareGraphicsRule{.jpg}{eps}{.bb}{`convert #1 /tmp/#1.eps && cat /tmp/#1.eps && rm /tmp/#1.eps} 
% % \DeclareGraphicsRule{.pdf}{eps}{.eps.bb}{`pdf2ps -c #1} 
%         \DeclareGraphicsExtensions{.eps.gz, .eps, .pdf, .png, .jpg}
%         \DeclareGraphicsRule{.eps.gz}  {eps} {.eps.bb}{`gunzip -c #1} 
%         \DeclareGraphicsRule{.pdf}     {eps} {.bb}{`convert PDF:#1 EPS:-}
%         \DeclareGraphicsRule{.png}         {eps} {.bb}{`convert PNG:#1 EPS:-}
%         \DeclareGraphicsRule{.jpg}     {eps} {.bb}{`convert JPEG:#1 EPS:-} 
% \fi


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Editorials
% 
% the font shape of ednotes is governed by the parameter \ednoteshape
% the default is sans serif, specialize it to say italic by 
% \def\ednoteshape{\it}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\def\ednoteshape{\sf}
\newif\ifshowednotes\showednotesfalse
\def\edshownotes{\showednotestrue}
\newcounter{ednote}
\def\ed@foot#1#2#3% text, type, label
{\def\test{#3}\def\empty{}\footnotetext[\value{ednote}]%
{{\sc{#2}\if\test\empty\else\label{ed:#3}[{#3}]\fi:} \ednoteshape #1}}
\def\ed@note#1#2#3% text, type, label
{\addtocounter{ednote}{1}\message{#2!}%
\ifshowednotes%
\footnotemark[\arabic{ednote}]\ed@foot{#1}{#2}{#3}%
\marginpar{#2(\arabic{ednote})}%
\fi}
\newcommand{\ednote}[2][]{\ed@note{#2}{EdNote}{#1}}
\newcommand{\issue}[2][]{\ed@note{#2}{Issue}{#1}}
\newenvironment{newpart}[1]% text
{\addtocounter{ednote}{1}\edef\new@number{\theednote}\message{New Part!}
\ifshowednotes%
\ed@foot{#1}{New Part}{}\marginpar{BegNP(\arabic{ednote})}%
\fi}
{\ifshowednotes\marginpar{EndNP(\new@number)}\fi}

\def\ednotemessage{\ifnum\value{ednote}>0\typeout{}%
\typeout{There are still \arabic{ednote} EdNotes and Issues to resolve!}%
\typeout{}\fi}

\newenvironment{todolist}[1]%
{\message{todolist!}{{\sf To Do: #1}}\bgroup\sf\marginpar{{\sf ToDo}}\begin{itemize}}%
{\end{itemize}\egroup}

\newenvironment{neu}{\begin{newpart}{no explanation given}}{\end{newpart}}

\def\tweak#1{\ifshowednotes\marginpar{{\sf tweak}(#1)}\fi}

\def\indextoo#1{{#1}\index{#1}}
\def\df#1{\bf{#1}}
\def\dfi#1{\bf{\indextoo{#1}}}
\def\defemph{\textbf}
\def\defin#1{\indextoo{#1}}
\def\defins#1{#1s\index{#1}}
\def\emin#1{\indextoo{#1}}
\def\emins#1{{#1s}\index{#1}}
\def\edin#1{\indextoo{#1}}
\def\edins#1{\indextoo{#1}s}
\def\ttin#1{{\tt{#1}}\index{#1@{\tt{#1}}}}
\def\ttins#1{{\tt{#1}}s\index{#1@{\tt{#1}}}}

\newenvironment{myfig}[2]%
{\begin{figure}[!htb]\def\myfiglabel{#1}\def\myfigcaption{{#2}}\begin{center}}
{\caption{\myfigcaption}\label{fig:\myfiglabel}\end{center}\end{figure}}
\def\myfigref#1{Figure~\ref{fig:#1}}
\def\myfigsref#1#2{Figures~\ref{fig:#1} and~\ref{fig:#2}}
\def\myfiglref#1#2{Figures~\ref{fig:#1} to~\ref{fig:#2}}
\def\Myfigref#1{Figure~\ref{fig:#1}}  % this one is capitalized for sentence beginnings


%%%%%%%%%%%%%%%%%%%%%%%%%%%% support for XML %%%%%%%%%%%%%%%%%%%%%%%%%%
\def\attribute#1#2{{\tt{#1}}\index{#1@{\tt{#1}} attribute in!{\tt{#2}}}}
\def\element#1{{\tt{#1}}\index{#1@{\tt{#1}} (element)}}
\def\oldelement#1#2{{\tt{#1}}\index{#1@{\tt{#1}} (deprecated in {#2})}}
\def\eldef#1{\label{eldef:#1}{\tt{#1}}\index{#1@{\tt{#1}} (element)}}
\def\attval#1#2#3{{\tt{'#1'}}%
\index{#1@{\tt{#1}}  value for attribue !{\tt{#2}} on element!{\tt{#3}}}}



\newcommand{\generaltable}[1]{%
 omgroup   & id     & type, style     & +  & {\rm {\omdoc} element} \\\hline
 ref       &        & xref, type      & -- &     \\\hline}

\newcommand{\idtable}[1]{%
 omdoc     & id, version, xmlns & type, catalogue, style,  
                                  xmlns, version, xmlns:xsi,
                                  xsi:schemaLocation      & +  & {\rm {\omdoc} element}* \\\hline
 catalogue &                    &                         & -- & loc* \\\hline
 loc       & theory             & omdoc, cd               & -- & EMPTY \\\hline}

\newcommand{\metadatatable}[1]{%
 metadata    & id & inherits, style    & -- &({\rm dc-element})*, extradata \\\hline
 extradata   &  &             & -- & ANY  \\\hline
 Creator     &  & id, style, role    & -- & {\tt{\%DCperson}} \\\hline
 Contributor &  & id, style, role    & -- & {\tt{\%DCperson}}\\\hline
 Title       &  & xml:lang    & -- & {\rm {\element{CMP}} content}  \\\hline
 Subject     &  & xml:lang    & -- & {\rm {\element{CMP}} content}  \\\hline
 Description &  & xml:lang    & -- & {\rm {\element{CMP}} content}  \\\hline
 Publisher   &  & id, style          & -- & ANY  \\\hline
 Date        &  & action, who & -- & {\indextoo{ISO 8601}}  \\\hline
 Type        &  &             & -- & {\rm fixed:} "Dataset" {\rm or\ } "Text" \\\hline
 Format      &  &             & -- & {\rm fixed:} "xml,x-omdoc"  \\\hline
 Identifier  &  & scheme      & -- & ANY  \\\hline
 Source      &  &             & -- & ANY  \\\hline
 Language    &  &             & -- & {\indextoo{ISO 8601}} \\\hline
 Relation    &  &             & -- & ANY  \\\hline
 Rights      &  &             & -- & ANY  \\\hline}
\def\cf{symbol*,CMP*,FMP*}
\def\cfm{\cf}

\newcommand{\mathtable}[1]{%
 assertion   & id & type, theory, generated-by, style  & +  & {\cfm}      \\\hline
 example     & id, for & type, assertion, proof, style 
                                     & +  & symbol*, CMP* | OMOBJ*  \\\hline
 alternative & id, for, theory, entailed-by, entails, entailed-by-thm, entails-thm  
                & type, generated-by, just-by, style & +  & CMP*, (FMP* | requation* | OMOBJ)  \\\hline}


\def\justmatter{method?, premise*, (proof | proofobject)?}
\newcommand{\prooftable}[1]{%
 proof       & id, for, theory    & style & +   
             & symbol*, CMP*, (metacomment | derive | hypothesis)*, conclude \\\hline
 proofobject & id, for, theory    & style & +  & CMP*, OMOBJ \\\hline
 metacomment &                    & id & -- & CMP* \\\hline
 hypothesis  & id, discharged-in  & style & -- & {\cf}  \\\hline
 derive      & id                 & style & -- & CMP*, FMP*, \justmatter \\\hline
 conclude    & id                 & style & -- & CMP*, \justmatter \\\hline
 method      & xref               & & -- & OMOBJ* \\\hline
 premise     & xref               & & -- & EMPTY\\\hline}

\newcommand{\CFMPtable}[1]{%
 FMP         &        & logic     & -- & (assumption*, conclusion*) | OMOBJ \\\hline
 assumption  & id & style         & +  & CMP*, OMOBJ?      \\\hline
 conclusion  & id & style         & +  & CMP*, OMOBJ?      \\\hline
 CMP         &        & xml:lang  & -- &ANY \\\hline
 with        & id & style         & --  & {\rm {\element{CMP}} content}\\\hline
 omtext      & id     & type, for, style & +  & CMP+, FMP* \\\hline}

\newcommand{\constitutivetable}[1]{%
 symbol      & id       & kind, scope, style & +  & CMP*, (commonname | type | selector)*\\\hline
 commonname  &          & xml:lang     & -- & {\rm {\element{CMP}} content} \\\hline
 type        & system   & id, for, style      & -- & CMP*, OMOBJ         \\\hline
 axiom       & id       & generated-by, style & +  & {\cfm}   \\\hline
 definition  & id, for  & just-by, type, generated-by, style & +  
       & CMP*, (FMP* | requation+ | OMOBJ)?, measure?, ordering?  \\\hline
 requation   &          & id, style    & -- & pattern, value   \\\hline
 pattern     &          &              & -- & OMOBJ \\\hline
 value       &          &              & -- & OMOBJ \\\hline
 measure     &          &              & -- & OMOBJ \\\hline
 ordering    &          &              & -- & OMOBJ \\\hline}

\newcommand{\adttable}[1]{%
 adt         & id       & type, style  & +  & CMP*, commonname*, sortdef+\\\hline
 sortdef     & id       & kind, scope, style & -- & commonname*, (constructor | insort)*, recognizer? \\\hline
 constructor & id       & type, scope, style & +  & commonname*, argument*\\\hline
 argument    & sort     &              & +  & selector?\\\hline
 insort      & for      &              & -- & \\\hline
 selector    & id       & type, scope, kind, total, style 
                                          & -- & commonname*   \\\hline
 recognizer  & id       & type, scope, kind, style & -- & commonname*   \\\hline}

\newcommand{\complextable}[1]{%
 theory      & id       &style       & +  & commonname*, CMP*, ({\rm statement} |
 inclusion, imports)*\\\hline
 imports     & id, from & type, hiding, style & -- & CMP*, morphism? \\\hline
 morphism    &          & id, base, style     & -- & requation* \\\hline
 inclusion   & for      &              & -- &   \\\hline
 theory-inclusion & id, from, to, by & style     
                                                 & +  & (morphism, decomposition?)\\\hline
 axiom-inclusion   & id, from, to  & style   & +  & morphism?, (path-just | obligation*)\\\hline
 obligation  & induced-by, assertion  &              & -- & EMPTY\\\hline
 decompo-sition  & links &  & -- & EMPTY\\\hline
 path-just   & local, globals &         & -- & EMPTY\\\hline}

\newcommand{\extable}[1]{%
 exercise   & id      & style, for      & +  & {\cfm}, hint?, (solution* | mc*)\\\hline
 hint       &         & id, style       & +  & {\cfm}   \\\hline
 solution   &         & id, for, style  & +  & symbol*,CMP*, (FMP* | proof | proofobject)\\\hline
 mc         &         & id, style       & -- & symbol*, choice, hint?, answer\\\hline
 choice     &         & id, style       & +  & {\cfm}    \\\hline
 answer     & verdict & id, style       & +  & {\cfm}      \\\hline}

\newcommand{\omlettable}[1]{%
 omlet      &      & id, argstr, type, function, action, data, width,
                                    height, style & +  & {\element{CMP}} content\\\hline
 private    &      & id, for, theory, pto, pto-version,
                               requires, type, replaces, style
                                                  & +  & CMP*, data+ \\\hline
 code       & id, theory & id, for, theory, pto, pto-version,
                              requires, type, classid, codebase, style
                                    & +  & CMP*, input?, output?, effect?, data+ \\\hline
 input      &            &       & -- & CMP*\\\hline
 output     &            &       & -- & CMP*\\\hline
 effect     &            &       & -- & CMP*\\\hline
 data       &            & format, href, size & -- & <![CDATA[...]]> \\\hline}



\newcommand{\prestable}[1]{%
 ignore     &         & type, comment        & -- & ANY\\\hline
 omstyle    & element & for, id, xref, style & -- & (style|xslt)* \\\hline
 element    & name    &                      & -- & (attribute | element | text |
                                                     recurse | value-of)*\\\hline
 attribute  & name    &                      & -- & (\#PCDATA | value-of | text)*\\\hline
 text       &         &                      & -- & (\#PCDATA)\\\hline
 value-of   & select  &                      & -- &  EMPTY\\\hline
 recurse    &         & select               & -- &  EMPTY\\\hline
 presentation & for   & id, xref, fixity, parent, lbrack, rbrack, separator, 
                        bracket-style, style, precedence, crossref-symbol, theory    
                                             & -- & (use | xslt | style)* \\\hline
 xslt       & format, & xml:lang, requires   & -- & CDATA\\\hline 
 style      & format, & xml:lang, requires   & -- & (element | text | recurse | value-of)*\\\hline 
 use        & format    
            & xml:lang, requires, larg-group, rarg-group, fixity,
              lbrack, rbrack, separator, crossref-symbol, element, 
              attributes                     & -- & ANY\\\hline} 
 
\newcommand{\auxtable}[1]{\extable{#1}\omlettable{#1}\prestable{#1}}

\newcommand{\lquicktable}[1]{%
\begin{longtable}{|>{\tt}p{1.5cm}|l|l|>{\tt}p{1.6cm}<|>{\tt}p{1.6cm}|c|>{\tt}p{4cm}|}\hline
{\rm Element}& p. & Type  & \multicolumn{2}{|l|}{Attributes\hspace*{2.25cm}} & D & Content \\\hline
             & &        & {\rm Required}  & {\rm Optional} & C &        \\\hline\hline
#1\end{longtable}}

\newcommand{\squicktable}[1]{%
\begin{longtable}{|>{\tt}p{1.5cm}|l|>{\tt}p{2cm}|>{\tt}p{2.2cm}|c|>{\tt}p{5cm}|}\hline
{\rm Element}&  Type  & \multicolumn{2}{|l|}{Attributes\hspace*{2.25cm}} & D & Content \\\hline
             &        & {\rm Required}  & {\rm Optional} & C &        \\\hline\hline
#1\end{longtable}}

\newcommand{\quicktable}[1]{%
\footnotesize\begin{tabular}{|>{\tt}l|>{\tt}p{1.5cm}|>{\tt}p{1.8cm}|c|>{\tt}p{4cm}|}\hline
{\rm Element}& \multicolumn{2}{|l|}{Attributes\hspace*{2.25cm}} & D & Content  \\\hline
             & {\rm Required}  & {\rm Optional}     & C &           \\\hline\hline
#1\end{tabular}}

\def\bA{{\bf A}}\def\bB{{\bf B}}\def\bC{{\bf C}}\def\bT{{\bf T}}\def\bQ{{\bf Q}}
\def\bS{{\bf S}}\def\bD{{\bf D}}
\def\cW{{\cal W}}\def\cP{{\cal P}}\def\cE{{\cal E}}\def\cQ{{\cal Q}}
\def\sdot{.}\def\deq{\colon=}

\def\boexchen{\hbox{\vrule\vbox{\hrule width 6 pt\vskip 6pt\hrule}\vrule}}
\def\kasten{\hfil\null\nobreak\hfill\boexchen\par\smallskip}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Project descriptions %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newenvironment{projectdescription}%
{\newpage\bgroup}%
{\egroup}

\def\qmath{{\sc QMath}}
\def\ccaps{{\sc CCaps}}
%%% Local Variables: 
%%% mode: latex
%%% TeX-master: "omdoc"
%%% End:
 
