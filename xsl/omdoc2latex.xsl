<?xml version="1.0"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:dc="http://purl.org/DC"
		version="1.0">


<xsl:strip-space elements = "*" /> 
<xsl:output method="text"/>


<!-- ============= omdoc basics ============= -->


<xsl:template match="/">
  <xsl:text>%%% This file is automatically generated from an OpenMath Document,&#xA;</xsl:text>
  <xsl:text>%%% do not edit&#xA;&#xA;&#xA;</xsl:text>
  <xsl:text>\documentclass{article}</xsl:text><xsl:text>&#xA;</xsl:text>
  <xsl:text>\usepackage{latex2omdoc,url,moreverb}</xsl:text><xsl:text>&#xA;&#xA;</xsl:text>
  <xsl:apply-templates/>
</xsl:template>


<xsl:template match="omdoc">
  <xsl:text>\begin{document}&#xA;</xsl:text>
  <xsl:text>\begin{omdoc}&#xA;&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omdoc}&#xA;</xsl:text>
  <xsl:text>\end{document}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="omgroup">
  <xsl:text>\begin{omomgroup}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@type"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omomgroup}&#xA;</xsl:text>
</xsl:template>

<!-- 
======================
Dublin Core Metadata
======================
-->

<xsl:template match="metadata">
  <xsl:text>\begin{ommetadata}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{ommetadata}&#xA;&#xA;</xsl:text>
</xsl:template>

<xsl:template match="Contributor">
  <xsl:text>\dccontributor</xsl:text>
  <xsl:if test="@role">
    <xsl:text>[</xsl:text><xsl:value-of select="@role"/><xsl:text>]</xsl:text>
  </xsl:if>
  <xsl:text>{</xsl:text><xsl:apply-templates/><xsl:text>}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="Creator">
  <xsl:text>\dccreator</xsl:text>
  <xsl:if test="@role">
    <xsl:text>[</xsl:text><xsl:value-of select="@role"/><xsl:text>]</xsl:text>
  </xsl:if>
  <xsl:text>{</xsl:text><xsl:apply-templates/><xsl:text>}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="Title">
  <xsl:text>\dccreator{</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="Date">
  <xsl:text>\dcdate{</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>}&#xA;</xsl:text>
</xsl:template>


<!--
===========
Text Elements
===========
-->

<xsl:template match="omtext">
  <xsl:text>\begin{omomtext}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omomtext}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="rsrelation">
  <xsl:text>\omrsrelation{</xsl:text>
  <xsl:value-of select="@type"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@from"/>
  <xsl:text>}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="CMP">
  <xsl:text>\begin{omCMPverb}</xsl:text>
  <xsl:if test="@xml:lang">
    <xsl:text>[</xsl:text><xsl:value-of select="@xml:lang"/><xsl:text>]</xsl:text>
  </xsl:if>
  <xsl:text>{</xsl:text><xsl:value-of select="@format"/><xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>&#xA;\end{omCMPverb}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="ref">
  <xsl:text>\omref{</xsl:text>
  <xsl:value-of select="@xlink:href"/>
  <xsl:text>}</xsl:text>
</xsl:template>



<!-- 
===========
Math Elements 
===========
-->

<xsl:template match="FMP">
  <xsl:text>\begin{omFMPverb}</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>&#xA;\end{omFMPverb}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="assertion">
  <xsl:text>\begin{omassertion}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@theory"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@type"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omassertion}&#xA;&#xA;</xsl:text>
</xsl:template>

<xsl:template match="example">
  <xsl:text>\begin{omexample}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omexample}&#xA;&#xA;</xsl:text>
</xsl:template>

<xsl:template match="assumption">
  <xsl:text>\begin{omassumption}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omassumption}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="conclusion">
  <xsl:text>\begin{conclusion}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{conclusion}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="alternative-def">
  <xsl:apply-templates/>
</xsl:template>


<!-- ************ Proofs *************** -->

<xsl:template match="proof">
  <xsl:text>\begin{omproof}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@theory"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omproof}</xsl:text>
</xsl:template>

<xsl:template match="metacomment">
	<xsl:apply-templates/>
</xsl:template>

<xsl:template match="derive">
  <xsl:text>\begin{omderive}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omderive}</xsl:text>
</xsl:template>

<xsl:template match="conclude">
  <xsl:text>\begin{omconclude}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omconclude}</xsl:text>
</xsl:template>

<xsl:template match="hypothesis">
  <xsl:text>\begin{omhypothesis}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omhypothesis}</xsl:text>
</xsl:template>

<xsl:template match="method">
  <xsl:text>\begin{ommethod}{</xsl:text>
  <xsl:value-of select="om:OMS/@theory"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="om:OMS/@name"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="parameter">
  <xsl:text>\begin{omparameter}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omparameter}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="premise">
   <li>
    <B>Premise: </B>
    <a>    
     <xsl:attribute name="href">#<xsl:value-of select="@for"/></xsl:attribute>
     <xsl:value-of select="@for"/>
    </a>
   </li>
</xsl:template>

<!--  
==============================
Theory elements 
==============================
-->

<!-- theory elements etc.-->


<xsl:template match="theory">
  <xsl:text>\begin{omtheory}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omtheory}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="imports">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="morphism">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="inclusion">
  <xsl:apply-templates/>
</xsl:template>

<!-- definitions etc. -->

<xsl:template match="adt">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="omsymbol">
  <xsl:text>\begin{omsymbol}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omsymbol}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="commonname">
  <xsl:text>\omcommonname</xsl:text>
  <xsl:if test="@xml:lang">
    <xsl:text>[</xsl:text><xsl:value-of select="@xml:lang"/><xsl:text>]</xsl:text>
  </xsl:if>
  <xsl:text>{</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>}&#xA;</xsl:text>  
</xsl:template>

<xsl:template match="usage">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="presentation">
</xsl:template>

<xsl:template match="signature">
  <xsl:text>\begin{omsignature}{</xsl:text>
  <xsl:value-of select="@system"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omsignature}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="definition">
  <xsl:text>\begin{omdefinition}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omdefinition}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="requation">
  <xsl:text>\begin{omrequation}</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omrequation}</xsl:text>
</xsl:template>

<xsl:template match="pattern">
  <xsl:apply-templates/>
  <xsl:text>\goesto</xsl:text>
</xsl:template>

<xsl:template match="value">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="axiom">
  <xsl:text>\begin{omaxiom}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omaxiom}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="theory-inclusion">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="axiom-inclusion">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="defemph">
  <xsl:apply-templates/>
</xsl:template>

<!--  
==============================
Auxiliary elements 
==============================
-->

<xsl:template match="exercise">
  <xsl:text>\begin{omexercise}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omexercise}&#xA;</xsl:text>
</xsl:template>


<xsl:template match="hint">
  <xsl:text>\begin{omhint}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omhint}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="solution">
  <xsl:text>\begin{omsolution}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@for"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omsolution}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="mcgroup">
  <xsl:text>\begin{ommcgroup}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{ommcgroup}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="mc">
  <xsl:text>\begin{ommc}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{ommc}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="choice">
  <xsl:text>\begin{omchoice}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omchoice}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="answer">
  <xsl:text>\begin{omanswer}{</xsl:text>
  <xsl:value-of select="@verdict"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omanswer}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="omlet">
  <xsl:text>\begin{omomlet}{</xsl:text>
  <xsl:value-of select="@id"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@type"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@argstr"/>
  <xsl:text>}{</xsl:text>
  <xsl:value-of select="@function"/>
  <xsl:text>}&#xA;</xsl:text>
  <xsl:apply-templates/>
  <xsl:text>\end{omomlet}&#xA;</xsl:text>
</xsl:template>

<xsl:template match="private">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="code">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="input">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="output">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="effect">
  <xsl:apply-templates/>
</xsl:template>

<xsl:template match="data">
  <xsl:apply-templates/>
</xsl:template>

</xsl:stylesheet>
