<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>


<omdoc id="fns2-omdoc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.mathweb.org/omdoc
       http://www.mathweb.org/omdoc/xsd/omdoc.xsd"
       catalogue="catalogue.omdoc">

<metadata>
  <Title>The OpenMath Content Dictionary fns2.ocd  in OMDoc form</Title>
  <Creator role="trl">Michael Kohlhase</Creator>
  <Creator role="ant">The OpenMath Society</Creator>
  <Date> 2001-03-12 </Date>
  <Source>Derived from the OpenMath CD http://www.openmath.org/cd/fns2.ocd.</Source>
  <Type>Text</Type>
  <Format>application/omdoc+xml</Format>
  <Rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </Rights>
  <Description>
    This CD holds further functions concerning functions themselves. A
    particularly interesting function is

apply_to_list

which applies an nary function to all the elements in a specified
list. For example, such a function can be used to form sums and
products in conjunction with plus and times respectively.
</Description>
</metadata>

<theory id="fns2">

<imports id="fns2-imports-sts" from="sts.omdoc#sts"/>
<imports id="fns2-imports-logic1" from="logic1.omdoc#logic1"/>
<imports id="fns2-imports-set1" from="set1.omdoc#set1"/>
<imports id="fns2-imports-relation1" from="relation1.omdoc#relation1"/>
<imports id="fns2-imports-alg1" from="alg1.omdoc#alg1"/>
<imports id="fns2-imports-quant1" from="quant1.omdoc#quant1"/>
<imports id="fns2-imports-arith1" from="arith1.omdoc#arith1"/>
<imports id="fns2-imports-list1" from="list1.omdoc#list1"/>
<imports id="fns2-imports-fns1" from="fns1.omdoc#fns1"/>

<symbol id="kernel">
  <CMP> 
    This symbol denotes the kernel of a given function. This may be
    defined as the subset of the range of the given function which maps to
    the identity element of the image of the given function, however no
    semantics are assumed. The kernel of a function is also known as the
    null space of the function.
  </CMP>
  <commonname>kernel</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
	<OMS name="Object" cd="sts"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="kernel-prop-1" type="lemma">
  <CMP> x in the kernal of f implies that <OMOBJ><OMA xref="kernel-prop-1.1"/></OMOBJ></CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMV name="x"/>
	  <OMA>
	    <OMS cd="fns2" name="kernel"/>
	    <OMV name="f"/>
	  </OMA>
	</OMA>
	<OMA id="kernel-prop-1.1">
	  <OMS cd="relation1" name="eq"/>
	  <OMA>
	    <OMV name="f"/>
	    <OMV name="x"/>
	  </OMA>
	  <OMS cd="alg1" name="zero"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="apply_to_list">
  <CMP> 
    This symbol is used to denote the repeated application of an n-ary
    function on the elements of a given list. For example when used with
    plus or times this can represent sums and products.

The symbol takes two arguments; the first of which is the n-ary
function, the second a list.
</CMP>
<commonname>apply to list</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nary" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
	<OMS name="Object" cd="sts"/>
      </OMA>
      <OMV name="ObjectList"/>
      <OMS name="Object" cd="sts"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
<presentation id="pres-apply_to_list" for="apply_to_list">
  <use  format="default">map</use>
</presentation>
<example id="apply_to_list-ex-1" type="for" for="apply_to_list">
  <CMP>For all n 1 + 2 + ... + n = n(n+1)/2.</CMP>
  <OMOBJ>
    <OMBIND>
      <OMS cd="quant1" name="forall"/>
      <OMBVAR>
	<OMV name="n"/>
      </OMBVAR>
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="fns2" name="apply_to_list"/>
	  <OMS cd="arith1" name="plus"/>
	  <OMA>
	    <OMS cd="list1" name="list"/>
	    <OMI> 1 </OMI>
	    <OMV name="n"/>
	    <OMS cd="fns1" name="identity"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="arith1" name="divide"/>
	  <OMA>
	    <OMS cd="arith1" name="times"/>
	    <OMV name="n"/>
	    <OMA>
	      <OMS cd="arith1" name="plus"/>
	      <OMV name="n"/>
	      <OMI> 1 </OMI>
	    </OMA>
	  </OMA>
	  <OMI> 2 </OMI>
	</OMA>
      </OMA>
    </OMBIND>
  </OMOBJ>
</example>
<example id="apply_to_list-ex-2" type="for" for="apply_to_list">
  <CMP>One may form a set in the following way. This gives the set 
    $\{1^2, 2^2,... , 10^2\}$</CMP>
  <OMOBJ>
    <OMA>
      <OMS cd="fns2" name="apply_to_list"/>
      <OMS cd="set1" name="set"/>
      <OMA>
	<OMS cd="list1" name="list"/>
	<OMI> 1 </OMI>
	<OMI> 10 </OMI>
	<OMBIND>
	  <OMS cd="fns1" name="lambda"/>
	  <OMBVAR>
	    <OMV name="x"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="arith1" name="power"/>
	    <OMV name="x"/>
	    <OMI> 2 </OMI>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMA>
  </OMOBJ>
</example>
<symbol id="right_compose">
  <CMP> 
    This symbol represents a function forming the right-composition of its
    two functional arguments.
  </CMP>
  <commonname>right compose</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	  <OMS name="Object" cd="sts"/>
	</OMA>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="right_compose-prop-1" type="lemma">
  <CMP> right_compose(f,g)(x) = g(f(x)) </CMP>
  <FMP>
    <OMOBJ>
      <OMBIND>
	<OMS cd="quant1" name="forall"/>
	<OMBVAR>
	  <OMV name="f"/>
	  <OMV name="g"/>
	  <OMV name="x"/>
	</OMBVAR>
	<OMA>
	  <OMS cd="relation1" name="eq"/>
	  <OMA>
	    <OMA>
	      <OMS cd="fns2" name="right_compose"/>
	      <OMV name="f"/>
	      <OMV name="g"/>
	    </OMA>
	    <OMV name="x"/>
	  </OMA>
	  <OMA>
	    <OMV name="g"/>
	    <OMA>
	      <OMV name="f"/>
	      <OMV name="x"/>
	    </OMA>
	  </OMA>
	</OMA>
      </OMBIND>
    </OMOBJ>
  </FMP>
</assertion>
</theory>
</omdoc>
