<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>


<omdoc id="piece1-omdoc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.mathweb.org/omdoc
       http://www.mathweb.org/omdoc/xsd/omdoc.xsd"
       catalogue="catalogue.omdoc">

<metadata>
  <Title>The OpenMath Content Dictionary piece1.ocd  in OMDoc form</Title>
  <Creator role="trl">Michael Kohlhase</Creator>
  <Creator role="ant">The OpenMath Society</Creator>
  <Date> 2001-03-12 </Date>
  <Source>Derived from the OpenMath CD http://www.openmath.org/cd/piece1.ocd.</Source>
  <Type>Text</Type>
  <Format>application/omdoc+xml</Format>
  <Rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </Rights>
  <Description>
    This CD is intended to be compatible with the corresponding
    elements in Content MathML 2.

In this CD we give a set of operators for piece-wise defined expressions.
</Description>
</metadata>

<theory id="piece1">
  <imports id="piece1-imports-sts" from="sts.omdoc#sts"/>
  <imports id="piece1-imports-relation1" from="relation1.omdoc#relation1"/>
  <imports id="piece1-imports-arith1" from="arith1.omdoc#arith1"/>
  <imports id="piece1-imports-setname2" from="setname2.omdoc#setname2"/>

<symbol id="piecewise">
  <CMP> 
    This operator heads an expression that is being defined piecewise. Its 
    arguments are n objects built with the piece constructor, optionally
    followed by one built with otherwise constructor.
  </CMP>
  <commonname>piecewise</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nary" cd="sts"/>
	  <OMV name="Piece"/>
	</OMA>
	<OMS name="Object" cd="sts"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<example id="piecewise-ex-1" type="for" for="piecewise">
  <OMOBJ>
    <OMA>
      <OMS cd="relation1" name="eq"/>
      <OMA>
	<OMS cd="arith1" name="abs"/>
	<OMV name="x"/>
      </OMA>
      <OMA>
	<OMS cd="piece1" name="piecewise"/>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMA>
	    <OMS cd="arith1" name="unary_minus"/>
	    <OMV name="x"/>
	  </OMA>
	  <OMA>
	    <OMS cd="relation1" name="lt"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMI> 0 </OMI>
	  <OMA>
	    <OMS cd="relation1" name="eq"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="otherwise"/>
	  <OMV name="x"/>
	</OMA>
      </OMA>
    </OMA>
  </OMOBJ>
</example>
<symbol id="piece">
  <CMP> 
    This introduces an individual component of a piecewise definition. It has
    precisely two arguments: the first is the value, and the second is a Boolean
    (meant to be a predicate) which is true if and only if this piece is to
    provide the value of the piecewise construct.
  </CMP>
  <commonname>piece</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMS name="Object" cd="sts"/>
	<OMS name="Boolean" cd="setname2"/>
	<OMS name="Object" cd="sts"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<example id="piece-ex-1" type="for" for="piece">
  <OMOBJ>
    <OMA>
      <OMS cd="relation1" name="eq"/>
      <OMA>
	<OMS cd="arith1" name="abs"/>
	<OMV name="x"/>
      </OMA>
      <OMA>
	<OMS cd="piece1" name="piecewise"/>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMA>
	    <OMS cd="arith1" name="unary_minus"/>
	    <OMV name="x"/>
	  </OMA>
	  <OMA>
	    <OMS cd="relation1" name="lt"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMI> 0 </OMI>
	  <OMA>
	    <OMS cd="relation1" name="eq"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="otherwise"/>
	  <OMV name="x"/>
	</OMA>
      </OMA>
    </OMA>
  </OMOBJ>
</example>
<symbol id="otherwise">
  <CMP>
    This symbol introduces the 'default' value of a piecewise construct.
    If none of the previous piece constructs can provide the value, this will.
    It has a single child, the value.
  </CMP>
  <commonname>otherwise</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMS name="Object" cd="sts"/>
	<OMS name="Object" cd="sts"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<example id="otherwise-ex-1" type="for" for="otherwise">
  <OMOBJ>
    <OMA>
      <OMS cd="relation1" name="eq"/>
      <OMA>
	<OMS cd="arith1" name="abs"/>
	<OMV name="x"/>
      </OMA>
      <OMA>
	<OMS cd="piece1" name="piecewise"/>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMA>
	    <OMS cd="arith1" name="unary_minus"/>
	    <OMV name="x"/>
	  </OMA>
	  <OMA>
	    <OMS cd="relation1" name="lt"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="piece"/>
	  <OMI> 0 </OMI>
	  <OMA>
	    <OMS cd="relation1" name="eq"/>
	    <OMV name="x"/>
	    <OMI> 0 </OMI>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="piece1" name="otherwise"/>
	  <OMV name="x"/>
	</OMA>
      </OMA>
    </OMA>
  </OMOBJ>
</example>
</theory>
</omdoc>
