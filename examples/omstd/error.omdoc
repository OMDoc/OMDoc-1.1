<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>


<omdoc id="error-omdoc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.mathweb.org/omdoc
       http://www.mathweb.org/omdoc/xsd/omdoc.xsd"
       catalogue="catalogue.omdoc">

<metadata>
  <Title>The OpenMath Content Dictionary error.ocd  in OMDoc form</Title>
  <Creator role="trl">Michael Kohlhase</Creator>
  <Creator role="ant">The OpenMath Society</Creator>
  <Date> 2001-03-12 </Date>
  <Source>Derived from the OpenMath CD http://www.openmath.org/cd/error.ocd.</Source>
  <Type>Text</Type>
  <Format>application/omdoc+xml</Format>
  <Rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </Rights>
  <Description/>
</metadata>

<theory id="error">

<imports id="error-imports-sts" from="sts.omdoc#sts"/>

<symbol id="unhandled_symbol">
  <CMP>
    This symbol represents the error which is raised when an application
    reads a symbol which is present in the mentioned content
    dictionary, but which it has not implemented.

When receiving such a symbol, the application should act as if it had
received the OpenMath error object constructed from unhandled_symbol
and the unhandled symbol as in the example below.
</CMP>
<commonname>unhandled symbol</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMV name="OMSymbol"/>
      <OMS name="error" cd="sts"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
<example id="unhandled_symbol-ex-1" type="for" for="unhandled_symbol">
  <CMP> The application does not implement the Complex numbers:</CMP>
  <OMOBJ>
    <OME>
      <OMS cd="error" name="unhandled_symbol"/>
      <OMS cd="setname1" name="C"/>
    </OME>
  </OMOBJ>
</example>
<symbol id="unexpected_symbol">
  <CMP>
    This symbol represents the error which is raised when an application
    reads a symbol which is not present in the mentioned content dictionary.

When receiving such a symbol, the application should act as if it had
received the OpenMath error object constructed from unexpected_symbol
and the unexpected symbol as in the example below.
</CMP>
<commonname>unexpected symbol</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMV name="OMSymbol"/>
      <OMS name="error" cd="sts"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
<example id="unexpected_symbol-ex-1" type="for" for="unexpected_symbol">
  <CMP>The application received a mistyped symbol</CMP>
  <OMOBJ>
    <OME>
      <OMS cd="error" name="unexpected_symbol"/>
      <OMS cd="arith1" name="plurse"/>
    </OME>
  </OMOBJ>
</example>
<symbol id="unsupported_CD">
  <CMP>
    This symbol represents the error which is raised when an application
    reads a symbol where the mentioned content dictionary is not
    present.

When receiving such a symbol, the application should act as if it had
received the OpenMath error object constructed from unsupported_CD and
the symbol from the unsupported Content Dictionary as in the example
below.
</CMP>
<commonname>unsupported CD</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMV name="OMSymbol"/>
      <OMS name="error" cd="sts"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
<example id="unsupported_CD-ex-1" type="for" for="unsupported_CD">
  <CMP> The application does not know about the CD specfun1</CMP>
  <OMOBJ>
    <OME>
      <OMS cd="error" name="unsupported_CD"/>
      <OMS cd="specfun1" name="BesselJ"/>
    </OME>
  </OMOBJ>
</example>
</theory>
</omdoc>
