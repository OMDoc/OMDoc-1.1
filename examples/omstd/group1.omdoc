<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>


<omdoc id="group1-omdoc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.mathweb.org/omdoc
       http://www.mathweb.org/omdoc/xsd/omdoc.xsd"
       catalogue="catalogue.omdoc">

<metadata>
  <Title>The OpenMath Content Dictionary group1.ocd  in OMDoc form</Title>
  <Creator role="trl">Michael Kohlhase</Creator>
  <Creator role="ant">Andrew Solomon</Creator>
  <Date> 1999-05-10 </Date>
  <Source>Derived from the OpenMath CD http://www.openmath.org/cd/group1.ocd.</Source>
  <Type>Text</Type>
  <Format>application/omdoc+xml</Format>
  <Rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </Rights>
  <Description> A CD of functions for group theory   </Description>
</metadata>

<theory id="group1">

<imports id="group1-imports-sts" from="sts.omdoc#sts"/>
<imports id="group1-imports-logic1" from="logic1.omdoc#logic1"/>
<imports id="group1-imports-relation1" from="relation1.omdoc#relation1"/>
<imports id="group1-imports-set1" from="set1.omdoc#set1"/>
<imports id="group1-imports-quant1" from="quant1.omdoc#quant1"/>
<imports id="group1-imports-setname1" from="setname1.omdoc#setname1"/>
<imports id="group1-imports-fns1" from="fns1.omdoc#fns1"/>
<imports id="group1-imports-arith1" from="arith1.omdoc#arith1"/>
<imports id="group1-imports-alg1" from="alg1.omdoc#alg1"/>
<imports id="group1-imports-setname2" from="setname2.omdoc#setname2"/>

<symbol id="declare_group">
  <CMP>
    This symbol is a constructor for groups. It takes four arguments in
    the following order; a set to specify the elements in the group, a
    binary operation to specify the group operation, a unary operation to
    specify inverses of group elements and an element to specify the
    identity. Both the binary and unary operations should act on elements
    of the set and return an element of the set.
  </CMP>
  <commonname>declare group</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Set"/>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMV name="SetElement"/>
	  <OMV name="SetElement"/>
	  <OMV name="SetElement"/>
	</OMA>
	<OMA>
	  <OMS name="mapsto" cd="sts"/>
	  <OMV name="SetElement"/>
	  <OMV name="SetElement"/>
	</OMA>
	<OMV name="SetElement"/>
	<OMV name="Group"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="declare_group-prop-1" type="lemma">
  <CMP>
    A group is closed under its operation.
    A groups operation is associative.
    A group has an identity element.
    Every element of a group has an inverse.
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="relation1" name="eq"/>
	  <OMV name="G"/>
	  <OMA>
	    <OMS cd="group1" name="declare_group"/>
	    <OMV name="set"/>
	    <OMV name="binop"/>
	    <OMV name="unop"/>
	    <OMV name="elt"/>
	  </OMA>
	</OMA>
	<OMA>
	  <OMS cd="logic1" name="and"/>
	  <OMA>
	    <OMS cd="logic1" name="implies"/>
	    <OMA>
	      <OMS cd="logic1" name="and"/>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="x"/>
		<OMV name="set"/>
	      </OMA>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="y"/>
		<OMV name="set"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMA>
		<OMV name="binop"/>
		<OMV name="x"/>
		<OMV name="y"/>
	      </OMA>
	      <OMV name="set"/>
	    </OMA>
	  </OMA>
	  <OMA>
	    <OMS cd="relation1" name="eq"/>
	    <OMA>
	      <OMV name="binop"/>
	      <OMV name="x"/>
	      <OMA>
		<OMV name="binop"/>
		<OMV name="y"/>
		<OMV name="z"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMV name="binop"/>
	      <OMA>
		<OMV name="binop"/>
		<OMV name="x"/>
		<OMV name="y"/>
	      </OMA>
	      <OMV name="z"/>
	    </OMA>
	  </OMA>
	  <OMA>
	    <OMS cd="logic1" name="and"/>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="elt"/>
	      <OMV name="set"/>
	    </OMA>
	    <OMBIND>
	      <OMS cd="quant1" name="forall"/>
	      <OMBVAR>
		<OMV name="x"/>
	      </OMBVAR>
	      <OMA>
		<OMS cd="logic1" name="implies"/>
		<OMA>
		  <OMS cd="set1" name="in"/>
		  <OMV name="x"/>
		  <OMV name="set"/>
		</OMA>
		<OMA>
		  <OMS cd="logic1" name="and"/>
		  <OMA>
		    <OMS cd="relation1" name="eq"/>
		    <OMA>
		      <OMV name="binop"/>
		      <OMV name="elt"/>
		      <OMV name="x"/>
		    </OMA>
		    <OMV name="x"/>
		  </OMA>
		  <OMA>
		    <OMS cd="relation1" name="eq"/>
		    <OMA>
		      <OMV name="binop"/>
		      <OMV name="x"/>
		      <OMV name="elt"/>
		    </OMA>
		    <OMV name="x"/>
		  </OMA>
		</OMA>
	      </OMA>
	    </OMBIND>
	  </OMA>
	  <OMBIND>
	    <OMS cd="quant1" name="forall"/>
	    <OMBVAR>
	      <OMV name="x"/>
	    </OMBVAR>
	    <OMA>
	      <OMS cd="logic1" name="implies"/>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="x"/>
		<OMV name="set"/>
	      </OMA>
	      <OMA>
		<OMS cd="relation1" name="eq"/>
		<OMA>
		  <OMV name="binop"/>
		  <OMV name="x"/>
		  <OMA>
		    <OMV name="unop"/>
		    <OMV name="x"/>
		  </OMA>
		</OMA>
		<OMV name="elt"/>
	      </OMA>
	    </OMA>
	  </OMBIND>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<example id="declare_group-ex-3" type="for" for="declare_group">
  <CMP>
    This example represents the group which has as elements all positive
    and negative even numbers, the group operation is binary addition,
    inverses are the negative of the element and the identity is the zero
    element.
  </CMP>
  <OMOBJ>
    <OMA>
      <OMS cd="group1" name="declare_group"/>
      <OMA>
	<OMS cd="set1" name="suchthat"/>
	<OMS cd="setname1" name="Z"/>
	<OMBIND>
	  <OMS cd="fns1" name="lambda"/>
	  <OMBVAR>
	    <OMV name="x"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="set1" name="in"/>
	    <OMA>
	      <OMS cd="arith1" name="divide"/>
	      <OMV name="x"/>
	      <OMI> 2 </OMI>
	    </OMA>
	    <OMS cd="setname1" name="Z"/>
	  </OMA>
	</OMBIND>
      </OMA>
      <OMS cd="arith1" name="plus"/>
      <OMS cd="arith1" name="unary_minus"/>
      <OMS cd="alg1" name="zero"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="is_abelian">
  <CMP>
    The unary boolean function whose value is true iff the argument is an abelian group
  </CMP>
  <commonname>is abelian</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="is_abelian-prop-1" type="lemma">
  <CMP>
    If <OMOBJ><OMV name="G"/></OMOBJ> is abelian, then for all a,b in
    <OMOBJ><OMA xref="is_abelian-prop-1.1"/></OMOBJ> we have           
    <OMOBJ><OMA xref="is_abelian-prop-1.2"/></OMOBJ>.
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="group1" name="is_abelian"/>
	  <OMV name="G"/>
	</OMA>
	<OMBIND>
	  <OMS cd="quant1" name="forall"/>
	  <OMBVAR>
	    <OMV name="a"/>
	    <OMV name="b"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="logic1" name="implies"/>
	    <OMA>
	      <OMS cd="logic1" name="and"/>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="a"/>
		<OMA id="is_abelian-prop-1.1">
		  <OMS cd="group1" name="element_set"/>
		  <OMV name="G"/>
		</OMA>
	      </OMA>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="b"/>
		<OMA>
		  <OMS cd="group1" name="element_set"/>
		  <OMV name="G"/>
		</OMA>
	      </OMA>
	    </OMA>
	    <OMA id="is_abelian-prop-1.2">
	      <OMS cd="relation1" name="eq"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="a"/>
		<OMV name="b"/>
	      </OMA>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="b"/>
		<OMV name="a"/>
	      </OMA>
	    </OMA>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="group">
  <CMP>
    The n-ary function Group. The group generated by its arguments.
    The arguments must have a natural group operation associated with them.
  </CMP>
  <commonname>group</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="nary" cd="sts"/>
	  <OMV name="GroupGenerators"/>
	</OMA>
	<OMV name="Group"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="element_set">
  <CMP>
    The unary function which returns the set of elements of a group.
  </CMP>
  <commonname>element set</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="is_subgroup">
  <CMP>
    The binary function whose value is true if the second argument is  a subgroup of the first.
  </CMP>
  <commonname>is subgroup</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="is_subgroup-prop-1" type="lemma">
  <CMP>
    If A is a subgroup of B, then 
    <OMOBJ><OMA xref="is_subgroup-prop-1.1"/></OMOBJ> is a subset of 
    <OMOBJ><OMA xref="is_subgroup-prop-1.2"/></OMOBJ>.
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="group1" name="is_subgroup"/>
	  <OMV name="B"/>
	  <OMV name="A"/>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="subset"/>
	  <OMA id="is_subgroup-prop-1.1">
	    <OMS cd="group1" name="element_set"/>
	    <OMV name="A"/>
	  </OMA>
	  <OMA id="is_subgroup-prop-1.2">
	    <OMS cd="group1" name="element_set"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="right_transversal">
  <CMP>
    The binary function whose value is a set of representatives for the right cosets 
    of the second argument as a subgroup of the first.
  </CMP>
  <commonname>right transversal</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="normal_closure">
  <CMP>
    The binary function whose value is the set of conjugates of 
    the elements of the second group by elements of the first,
    where multiplication between them is defined.
  </CMP>
  <commonname>normal closure</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="normal_closure-prop-1" type="lemma">
  <CMP>
    If n is in the normal closure (A,B), then 
    there exists a in A and b in B such that  <OMOBJ><OMA xref="normal_closure-prop-1.1"/></OMOBJ>
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMV name="n"/>
	  <OMA>
	    <OMS cd="group1" name="normal_closure"/>
	    <OMV name="A"/>
	    <OMV name="B"/>
	  </OMA>
	</OMA>
	<OMBIND>
	  <OMS cd="quant1" name="exists"/>
	  <OMBVAR>
	    <OMV name="a"/>
	    <OMV name="b"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="logic1" name="and"/>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="a"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="A"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="b"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="B"/>
	      </OMA>
	    </OMA>
	    <OMA id="normal_closure-prop-1.1">
	      <OMS cd="relation1" name="eq"/>
	      <OMV name="n"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="invb"/>
		<OMV name="a"/>
		<OMV name="b"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="relation1" name="eq"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="invb"/>
		<OMV name="b"/>
	      </OMA>
	      <OMS cd="alg1" name="one"/>
	    </OMA>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="is_normal">
  <CMP>
    If G, H are the group arguments, then IsNormal(G,H) returns true precisely when
    G is normal in H. That is, <OMOBJ><OMA xref="is_normal-prop1.1"/></OMOBJ>
    is defined and contained in H for all h in H and g in G.
  </CMP>
  <commonname>is normal</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
	<OMS cd="setname2" name="Boolean"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="is_normal-prop-1" type="lemma">
  <CMP>
    is_normal(G,H) implies that for all g in G and h in H then 
    <OMOBJ><OMA xref="is_normal-prop1.1"/></OMOBJ> in H
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="group1" name="is_normal"/>
	  <OMV name="G"/>
	  <OMV name="H"/>
	</OMA>
	<OMBIND>
	  <OMS cd="quant1" name="forall"/>
	  <OMBVAR>
	    <OMV name="g"/>
	    <OMV name="h"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="logic1" name="and"/>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="g"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="G"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="h"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="H"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMA id="is_normal-prop1.1">
		<OMS cd="arith1" name="times"/>
		<OMV name="invg"/>
		<OMV name="h"/>
		<OMV name="g"/>
	      </OMA>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="H"/>
	      </OMA>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="invg"/>
		<OMV name="g"/>
	      </OMA>
	    </OMA>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="quotient_group">
  <CMP>
    The binary function whose value is the factor group of the first argument by the 
    second, assuming the second is normal in the first.
  </CMP>
  <commonname>quotient group</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="conjugacy_class">
  <CMP>
    The binary function whose value is the set of elements which 
    are conjugate to the second argument in the first.
  </CMP>
  <commonname>conjugacy class</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMA>
	  <OMS name="structure" cd="sts"/>
	  <OMV name="Group"/>
	</OMA>
	<OMV name="Group"/>
	<OMV name="Set"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="conjugacy_class-prop-1" type="lemma">
  <CMP>
    The conjugacy class in G with respect to $h = \{g^{-1} h g | g in G\}$
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="relation1" name="eq"/>
	<OMA>
	  <OMS cd="group1" name="conjugacy_class"/>
	  <OMV name="G"/>
	  <OMV name="h"/>
	</OMA>
	<OMA>
	  <OMS cd="set1" name="suchthat"/>
	  <OMA>
	    <OMS cd="group1" name="element_set"/>
	    <OMV name="G"/>
	  </OMA>
	  <OMBIND>
	    <OMS cd="fns1" name="lambda"/>
	    <OMBVAR>
	      <OMV name="conj"/>
	    </OMBVAR>
	    <OMA>
	      <OMS cd="logic1" name="and"/>
	      <OMA>
		<OMS cd="relation1" name="eq"/>
		<OMV name="conj"/>
		<OMA>
		  <OMS cd="arith1" name="times"/>
		  <OMV name="invg"/>
		  <OMV name="h"/>
		  <OMV name="g"/>
		</OMA>
	      </OMA>
	      <OMA>
		<OMS cd="relation1" name="eq"/>
		<OMA>
		  <OMV name="invg"/>
		  <OMV name="g"/>
		</OMA>
		<OMS cd="alg1" name="one"/>
	      </OMA>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="conj"/>
		<OMA>
		  <OMS cd="group1" name="element_set"/>
		  <OMV name="G"/>
		</OMA>
	      </OMA>
	      <OMA>
		<OMS cd="set1" name="in"/>
		<OMV name="g"/>
		<OMA>
		  <OMS cd="group1" name="element_set"/>
		  <OMV name="G"/>
		</OMA>
	      </OMA>
	    </OMA>
	  </OMBIND>
	</OMA>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="derived_subgroup">
  <CMP>
    The unary function whose value is the subgroup of argument
    generated by all products of the form $xyx^{-1}y^{-1}$.
  </CMP>
  <commonname>derived subgroup</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="Group"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<assertion id="derived_subgroup-prop-1" type="lemma">
  <CMP>If d is in the derived subgroup of G, then 
    there exist x,y in G such that 
    <OMOBJ><OMA xref="derived_subgroup-prop-1.1"/></OMOBJ>
  </CMP>
  <FMP>
    <OMOBJ>
      <OMA>
	<OMS cd="logic1" name="implies"/>
	<OMA>
	  <OMS cd="set1" name="in"/>
	  <OMV name="d"/>
	  <OMA>
	    <OMS cd="group1" name="element_set"/>
	    <OMV name="G"/>
	  </OMA>
	</OMA>
	<OMBIND>
	  <OMS cd="quant1" name="exists"/>
	  <OMBVAR>
	    <OMV name="x"/>
	    <OMV name="y"/>
	  </OMBVAR>
	  <OMA>
	    <OMS cd="logic1" name="and"/>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="x"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="G"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="set1" name="in"/>
	      <OMV name="y"/>
	      <OMA>
		<OMS cd="group1" name="element_set"/>
		<OMV name="G"/>
	      </OMA>
	    </OMA>
	    <OMA id="derived_subgroup-prop-1.1">
	      <OMS cd="relation1" name="eq"/>
	      <OMV name="d"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="x"/>
		<OMV name="y"/>
		<OMV name="invx"/>
		<OMV name="invy"/>
	      </OMA>
	    </OMA>
	    <OMA>
	      <OMS cd="relation1" name="eq"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="invx"/>
		<OMV name="x"/>
	      </OMA>
	      <OMS cd="alg1" name="one"/>
	    </OMA>
	    <OMA>
	      <OMS cd="relation1" name="eq"/>
	      <OMA>
		<OMS cd="arith1" name="times"/>
		<OMV name="invy"/>
		<OMV name="y"/>
	      </OMA>
	      <OMS cd="alg1" name="one"/>
	    </OMA>
	  </OMA>
	</OMBIND>
      </OMA>
    </OMOBJ>
  </FMP>
</assertion>
<symbol id="sylow_subgroup">
  <CMP>The largest p-subgroup of the argument (up to conjugacy).</CMP>
  <commonname>sylow subgroup</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMS name="P" cd="setname1"/>
	<OMV name="PGroup"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="character_table_of_group">
  <CMP>Refers to the character table of its argument which must be a group.</CMP>
  <commonname>character table of group</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS name="mapsto" cd="sts"/>
	<OMV name="Group"/>
	<OMV name="CharacterTable"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<symbol id="character_table">
  <CMP>
    This is the constructor for a character table.
    Usage:

CharacterTable(centralizer_primes, centralizer_indices, 
classnames, power_map, irreducibles_matrix)

If G has n conjugacy classes then:

* centralizer_primes is of the form
[p1, .., pk] i &lt; j implies that pi &lt; pj and 
the pi are precisely the primes which divide the order of 
some centralizer of a conjugacy class

* centralizer_indices is of the form 
[[i11, ...,i1k] ... [in1,...ink]]
so the centralizer of class 1 has order $p1^i11 ... pk^i1k$ etc

* classnames is a list of n strings which name the conjugacy classes
in line with the convention used in the Atlas of Finite Groups

* power_map is of the form [list1, ..., listk]
where listi[j] is the name of the class where elements of class j go when
raised to the power pi.

* irreducibles_matrix: rows correspond to irreducible characters, 
columns are conjugacy classes. Entries are the value of an element of the 
column's conjugacy class under the character of the row.

</CMP>
<commonname>character table</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMV name="List"/>
      <OMV name="List"/>
      <OMV name="List"/>
      <OMV name="List"/>
      <OMV name="Matrix"/>
      <OMV name="CharacterTable"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
</theory>
</omdoc>
