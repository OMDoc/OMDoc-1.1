<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>


<omdoc id="sts-omdoc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.mathweb.org/omdoc
       http://www.mathweb.org/omdoc/xsd/omdoc.xsd"
       catalogue="catalogue.omdoc">

<metadata>
  <Title>The OpenMath Content Dictionary sts.ocd  in OMDoc form</Title>
  <Creator role="trl">Michael Kohlhase</Creator>
  <Creator role="ant">The OpenMath Society</Creator>
  <Date> 2001-03-12 </Date>
  <Source>Derived from the OpenMath CD http://www.openmath.org/cd/sts.ocd.</Source>
  <Type>Text</Type>
  <Format>application/omdoc+xml</Format>
  <Rights>Copyright (c) 2000-2002 Michael Kohlhase;
    This OMDoc content dictionary is released under the OpenMath license:
    http://monet.nag.co.uk/openmath/cdfiles/license.html
  </Rights>
  <Description> 
    Definitions of the symbols used by the OpenMath Small Type System.
  </Description>
</metadata>

<theory id="sts">
  <imports id="sts-imports-setname1" from="setname1.omdoc#setname1"/>

<symbol id="type">
  <CMP> 
    A symbol to be used within an OpenMath attribute to specify the type of the object.
  </CMP>
  <commonname>type</commonname>
  <type system="sts">
    <OMOBJ>
      <OMS name="attribution" cd="sts"/>
    </OMOBJ>
  </type>
</symbol>
<presentation for="type" xref="cc.omdoc#pr-type"/>
<example id="type-ex-1" type="for" for="type">
  <CMP>The variable z is attributed with a type for complex numbers.</CMP>
  <OMOBJ>
    <OMATTR>
      <OMATP>
	<OMS cd="sts" name="type"/>
	<OMS name="C" cd="setname1"/>
      </OMATP>
      <OMV name="z"/>
    </OMATTR>
  </OMOBJ>
</example>
<symbol id="mapsto">
  <CMP>
    This symbol represents the construction of a function type.

The first n-1 children denote the types of the arguments,
the last denotes the return type.
</CMP>
<commonname>mapsto</commonname>
<type system="sts">
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMA>
	<OMS cd="sts" name="nary"/>
	<OMV name="AnyType"/>
      </OMA>
      <OMV name="FunctionType"/>
    </OMA>
  </OMOBJ>
</type>
</symbol>
<presentation id="pr-mapsto" for="mapsto" parent="OMA" bracket-style="lisp">
  <xslt format="html|pmml"><![CDATA[
  <xsl:for-each select="*[position()!=last() and position() &gt; 1]">
    <xsl:apply-templates select="."/>
    <xsl:if test="position()!= last()"><xsl:text>,</xsl:text></xsl:if>
  </xsl:for-each>
  <xsl:text>&#x021A6;</xsl:text>
  <xsl:apply-templates select="*[last()]"/>]]>
</xslt>
<xslt format="TeX"><![CDATA[
<xsl:for-each select="*[position()!=last() and position() &gt; 1]">
  <xsl:apply-templates select="."/>
  <xsl:if test="position()!= last()"><xsl:text>{\times}</xsl:text></xsl:if>
</xsl:for-each>
<xsl:text>\rightarrow</xsl:text>
<xsl:text>{</xsl:text>
<xsl:apply-templates select="*[last()]"/>
<xsl:text>}</xsl:text>]]>
</xslt>
</presentation>
<example id="mapsto-ex-1" type="for" for="mapsto">
  <CMP>The signature of the power function: (Real , Integer) -&gt; Real</CMP>
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMS cd="setname1" name="R"/>
      <OMS cd="setname1" name="Z"/>
      <OMS cd="setname1" name="R"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="nary">
  <CMP>
    Constructs a child of mapsto which denotes an arbitrary number of
    copies of the argument of nary.
  </CMP>
  <commonname>nary</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMV name="Type"/>
	<OMV name="Tuple"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<presentation id="pr-nary" for="nary" parent="OMA" fixity="postfix">
  <use format="html">&lt;sup&gt;n&lt;/sup&gt;</use>
  <use format="TeX">^n</use>
  <use format="pmml" bracket-style="lisp" element="msup">n</use>
</presentation>
<example id="nary-ex-1" type="for" for="nary">
  <CMP>The signature for list, an n-ary function:</CMP>
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMA>
	<OMS name="nary" cd="sts"/>
	<OMS name="Object" cd="sts"/>
      </OMA>
      <OMS name="Object" cd="sts"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="nassoc">
  <CMP> 
    Constructs a child of mapsto which denotes an arbitrary number of
    copies of the argument of nassoc. The operator is associative on these
    arguments which means that repeated uses may be flattened/unflattened.
  </CMP>
  <commonname>nassoc</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMV name="Type"/>
	<OMV name="Tuple"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<presentation id="pr-nassoc" for="nassoc" parent="OMA" fixity="postfix">
  <use  format="html">&lt;sup&gt;*&lt;/sup&gt;</use>
  <use  format="pmml" bracket-style="lisp" element="msup">*</use>
  <use  format="TeX">^*</use>
</presentation>
<example id="nassoc-ex-1" type="for" for="nassoc">
  <CMP>The signature for plus, an associative n-ary function:</CMP>
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMA>
	<OMS name="nassoc" cd="sts"/>
	<OMV name="AbelianSemiGroup"/>
      </OMA>
      <OMV name="AbelianSemiGroup"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="error">
  <CMP>
    The error symbol is the 'return type' of error symbols in the error
    signature file.
  </CMP>
  <commonname>error</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMV name="String"/>
	<OMV name="Error"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<example id="error-ex-1" type="for" for="error">
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMV name="OMSymbol"/>
      <OMS name="error" cd="sts"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="structure">
  <CMP> 
    The structure element is used to represent a structure of a particular
    (algebraic) type.
  </CMP>
  <commonname>structure</commonname>
  <type system="sts">
    <OMOBJ>
      <OMA>
	<OMS cd="sts" name="mapsto"/>
	<OMV name="Category"/>
	<OMV name="Domain"/>
      </OMA>
    </OMOBJ>
  </type>
</symbol>
<example id="structure-ex-1" type="for" for="structure">
  <CMP>The signature of a function which given a set will return an element
    of that set:</CMP>
  <OMOBJ>
    <OMA>
      <OMS cd="sts" name="mapsto"/>
      <OMA>
	<OMS cd="sts" name="structure"/>
	<OMV name="set"/>
      </OMA>
      <OMV name="set"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="binder">
  <CMP>
    An `OMBIND' object has three parts: a "binder" such as "lambda" or
    "for all", a (list of) bound variables, and an expression.  The use of
    `binder' in a signature indicates that we are describing something
    which can only be used as the first child of an OMBIND construct.
  </CMP>
  <commonname>binder</commonname>
  <type system="sts">
    <OMOBJ>
      <OMV name="Symbol"/>
    </OMOBJ>
  </type>
</symbol>
<example id="binder-ex-1" type="for" for="binder">
  <CMP>The signature of forall is:</CMP>
  <OMOBJ><OMS name="binder" cd="sts"/></OMOBJ>
</example>
<symbol id="attribution">
  <CMP>
    An `attribution' object consists of pairs of keys and values.  The use
    of the symbol `attribution' in a signature indicates that the symbol
    is to be used as a key.
  </CMP>
  <commonname>attribution</commonname>
  <type system="sts">
    <OMOBJ>
      <OMV name="Symbol"/>
    </OMOBJ>
  </type>
</symbol>
<example id="attribution-ex-1" type="for" for="attribution">
  <OMOBJ><OMS name="attribution" cd="sts"/></OMOBJ>
</example>
<symbol id="Object">
  <CMP>
    Denotes any OpenMath object.
  </CMP>
  <commonname>Object</commonname>
  <type system="sts">
    <OMOBJ>
      <OMV name="Symbol"/>
    </OMOBJ>
  </type>
</symbol>
<example id="Object-ex-1" type="for" for="Object">
  <CMP>
    The signature for list, to show that list has the signature:
    Object* -&gt; Object</CMP>
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMA>
	<OMS name="nary" cd="sts"/>
	<OMS name="Object" cd="sts"/>
      </OMA>
      <OMS name="Object" cd="sts"/>
    </OMA>
  </OMOBJ>
</example>
<symbol id="NumericalValue">
  <CMP>
    Denotes an OpenMath object that is to be thought of as something that
    represents a numerical value, or a numerical value.
  </CMP>
  <commonname>NumericalValue</commonname>
  <type system="sts">
    <OMOBJ>
      <OMV name="Symbol"/>
    </OMOBJ>
  </type>
</symbol>
<presentation id="pr-NumericalValue" for="NumericalValue">
  <use  format="html">Num</use>
  <use  format="TeX">Num</use>
</presentation>
<example id="NumericalValue-ex-1" type="for" for="NumericalValue">
  <CMP>The generic signature for the function power:</CMP>
  <OMOBJ>
    <OMA>
      <OMS name="mapsto" cd="sts"/>
      <OMS name="NumericalValue" cd="sts"/>
      <OMS name="NumericalValue" cd="sts"/>
      <OMS name="NumericalValue" cd="sts"/>
    </OMA>
  </OMOBJ>
</example>
</theory>
</omdoc>
